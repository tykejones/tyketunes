{"ast":null,"code":"var _jsxFileName = \"/Users/marshalljones/Desktop/ReactProjects/tyketunes/tyketunes/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'name1',\n        artist: 'artist1',\n        album: 'album1',\n        id: 1\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        album: 'album2',\n        id: 2\n      }, {\n        name: 'name3',\n        artist: 'artist3',\n        album: 'album3',\n        id: 3\n      }],\n      playlistName: 'My Playlst',\n      playlistTracks: [{\n        name: 'playlistname1',\n        artist: 'playlistartist1',\n        album: 'playlistalbum1',\n        id: 4\n      }, {\n        name: 'playlistname2',\n        artist: 'playlistartist2',\n        album: 'playlistalbum2',\n        id: 5\n      }, {\n        name: 'playlistname3',\n        artist: 'playlistartist3',\n        album: 'playlistalbum3',\n        id: 6\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  search(search) {\n    console.log({\n      search\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"tyke\", React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"tunes\")), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marshalljones/Desktop/ReactProjects/tyketunes/tyketunes/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","push","setState","filter","currentTrack","trackUris","map","uri","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\nclass App extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            searchResults: [{name: 'name1', artist: 'artist1', album: 'album1', id: 1}, {name: 'name2', artist: 'artist2', album: 'album2', id: 2}, {name: 'name3', artist: 'artist3', album: 'album3', id: 3}],\n            playlistName: 'My Playlst',\n            playlistTracks: [{name: 'playlistname1', artist: 'playlistartist1', album: 'playlistalbum1', id: 4}, {name: 'playlistname2', artist: 'playlistartist2', album: 'playlistalbum2', id: 5}, {name: 'playlistname3', artist: 'playlistartist3', album: 'playlistalbum3', id: 6} ]\n    };\n        \n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n        this.updatePlaylistName = this.updatePlaylistName.bind(this);\n        this.savePlaylist = this.savePlaylist.bind(this);\n        this.search = this.search.bind(this);\n    \n    }\n    \n    addTrack(track) {\n     let tracks = this.state.playlistTracks;\n        if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n            return;\n        }\n        \n        tracks.push(track);\n        this.setState({playlistTracks: tracks});\n    }\n    \n    removeTrack(track) {\n       let tracks = this.state.playlistTracks;\n        tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n        \n        this.setState({playlistTracks: tracks});\n    }\n    \n    updatePlaylistName(name) {\n        this.setState({playlistName: name})\n    }\n    \n    savePlaylist() {\n        const trackUris = this.state.playlistTracks.map(track => track.uri);\n    }\n    \n    search(search) {\n        console.log({search});\n    }\n  \n    \n    \n    render() {\n        return (\n        <div>\n            <h1>tyke<span className=\"highlight\">tunes</span></h1>\n            <div className=\"App\">\n            \n            <SearchBar />\n            \n                <div className=\"App-playlist\">\n            \n            <SearchResults searchResults={this.state.searchResults} \n            onAdd= {this.addTrack} />\n            \n            <Playlist playlistName={this.state.playlistName}\n                playlistTracks={this.state.playlistTracks}     \n            onRemove= {this.removeTrack} \n            onNameChange= {this.updatePlaylistName}\n            onSave= {this.savePlaylist}\n            />\n            \n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}